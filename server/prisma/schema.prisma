// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


//
// Entities
// 
model Session {
  uid        String   @id @unique @default(uuid())
  otp        String   @db.VarChar(16)
  email      String   @db.VarChar(64)
  createdUtc DateTime @default(now()) @map("created_utc")
  updatedUtc DateTime @updatedAt @map("updated_utc")

  @@map("sessions")
}

model Person {
  uid         String   @id @unique @default(uuid())
  accountId   String   @map("account_id") @db.VarChar(36)
  fullName    String   @map("full_name") @db.VarChar(128)
  state       String   @db.VarChar(12) // P-Pending A-Active V-Verified S-Suspended X-Deleted  
  email       String   @unique @db.VarChar(64)
  phone       String?  @db.VarChar(24)
  telegram    String?  @db.VarChar(24)
  avatar      String?  @db.Text // a DataURI
  preferences Json?    @db.Json
  createdUtc  DateTime @default(now()) @map("created_utc")
  updatedUtc  DateTime @updatedAt @map("updated_utc")

  @@map("persons")
}


//
// Merkle Trees schema
//
model MerkleTree {
  uid   String @id @unique @default(uuid())
  name  String @unique
  root  String @db.VarChar(128)
  nodes Json   @db.Json
  size  Int

  @@map("merkle_trees")
}

model MerkleLeaf {
  uid          String @id @unique @default(uuid())
  merkleTreeUid String @map("merkle_tree_uid")
  index        BigInt
  // witness      Json   @db.Json // is this necessary ???

  // stringified data which has used to build the hashed, this may not be 
  // the full data stored in the Database for some entity but just the
  // data needed to verify existence in the MerkleTree
  // example: '{\"accountId\":\"0xB234...5678\"}'
  hash String @db.VarChar(128)
  data String @default("{}") @db.Text

  @@map("merkle_leaves")
}
